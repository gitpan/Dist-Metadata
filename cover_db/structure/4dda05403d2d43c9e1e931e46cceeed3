{"subroutine":[[1,"BEGIN"],[2,"BEGIN"],[7,"BEGIN"],[8,"BEGIN"],[9,"BEGIN"],[247,"BEGIN"],[20,"new"],[50,"default_file_spec"],[59,"determine_name_and_version"],[77,"determine_packages"],[80,"__ANON__"],[86,"__ANON__"],[107,"extract_into"],[148,"file_content"],[160,"find_files"],[180,"file_spec"],[197,"full_path"],[227,"list_files"],[253,"__ANON__"],[281,"packages_from_directory"],[294,"__ANON__"],[304,"__ANON__"],[320,"parse_name_and_version"],[347,"path_class_dir"],[348,"path_class_file"],[361,"perl_files"],[378,"physical_directory"],[400,"remove_root_dir"],[434,"required_attribute"],[443,"root"],[461,"set_name_and_version"]],"statement":[1,1,1,2,2,2,7,7,7,8,8,8,9,9,9,247,247,247,20,22,21,25,27,28,31,33,36,40,50,59,60,61,77,88,80,83,86,87,90,107,109,112,113,115,116,118,122,126,128,129,131,134,137,148,160,180,182,185,197,199,203,209,227,229,230,231,232,233,237,237,253,255,258,281,283,286,285,291,306,294,295,298,301,304,305,307,320,321,322,323,334,347,348,361,361,378,380,382,384,400,401,406,410,411,414,416,420,423,434,443,446,449,461,462,464,465,468],"file":"lib/Dist/Metadata/Dist.pm","digest":"4dda05403d2d43c9e1e931e46cceeed3","branch":[[22,{"text":"@_ == 1 ? :"}],[28,{"text":"if $req and not $$self{$req}"}],[33,{"text":"if $$self{'file_spec'}"}],[36,{"text":"unless $$self{'file_spec'}"}],[31,{"text":"if (exists $$self{'file_spec'})"}],[109,{"text":"unless @files"}],[129,{"text":"unless open my $fh, '>', $full_path"}],[182,{"text":"unless exists $$self{'file_spec'}"}],[199,{"text":"unless my $root = $self->root"}],[203,{"text":"if $file =~ m[^\\Q$root\\E[\\\\/]]"}],[229,{"text":"unless $$self{'_list_files'}"}],[255,{"text":"unless exists $$self{$method}"}],[285,{"text":"$self->path_class_file->new($_)->is_absolute ? :"}],[286,{"text":"if @files"}],[323,{"text":"if $path =~ m[\n\f      ([^\\\\/]+)             # name (anything below final directory)\n\f      -                     # separator\n\f      (v?[0-9._]+)          # version\n\f      (?:                   # possible file extensions\n\f          \\.t(?:ar\\.)?gz\n\f      )?\n\f      $\n\f    ]x"}],[322,{"text":"if ($path)"}],[401,{"text":"unless @files"}],[406,{"text":"unless $files[0] =~ m[^([^\\\\/]+)[\\\\/]]"}],[416,{"text":"unless m[^\\Q$dir\\E[\\\\/](.+)$]"}],[446,{"text":"unless exists $$self{'root'}"}],[465,{"text":"if not exists $$self{$fields[$i]} and defined $values[$i]"}]],"start":{"443":{"root":[{"pod":null,"subroutine":29,"statement":109,"time":null,"branch":19,"condition":4}]},"7":{"BEGIN":[{"pod":null,"subroutine":2,"statement":6,"time":null,"branch":null,"condition":null}]},"80":{"__ANON__":[{"pod":null,"subroutine":10,"statement":39,"time":null,"branch":5,"condition":1}]},"227":{"list_files":[{"pod":null,"subroutine":17,"statement":62,"time":null,"branch":10,"condition":1}]},"2":{"BEGIN":[{"pod":null,"subroutine":1,"statement":3,"time":null,"branch":null,"condition":null}]},"180":{"file_spec":[{"pod":null,"subroutine":15,"statement":55,"time":null,"branch":7,"condition":1}]},"1":{"BEGIN":[{"pod":null,"subroutine":null,"statement":null,"time":null,"branch":null,"condition":null}]},"320":{"parse_name_and_version":[{"pod":null,"subroutine":22,"statement":86,"time":null,"branch":14,"condition":2}]},"400":{"remove_root_dir":[{"pod":null,"subroutine":27,"statement":99,"time":null,"branch":16,"condition":4}]},"361":{"perl_files":[{"pod":null,"subroutine":25,"statement":93,"time":null,"branch":16,"condition":4}]},"20":{"new":[{"pod":null,"subroutine":6,"statement":18,"time":null,"branch":null,"condition":null}]},"348":{"path_class_file":[{"pod":null,"subroutine":24,"statement":92,"time":null,"branch":16,"condition":3}]},"59":{"determine_name_and_version":[{"pod":null,"subroutine":8,"statement":29,"time":null,"branch":5,"condition":1}]},"148":{"file_content":[{"pod":null,"subroutine":13,"statement":53,"time":null,"branch":7,"condition":1}]},"347":{"path_class_dir":[{"pod":null,"subroutine":23,"statement":91,"time":null,"branch":16,"condition":2}]},"107":{"extract_into":[{"pod":null,"subroutine":12,"statement":39,"time":null,"branch":5,"condition":1}]},"281":{"packages_from_directory":[{"pod":null,"subroutine":19,"statement":73,"time":null,"branch":12,"condition":1}]},"294":{"__ANON__":[{"pod":null,"subroutine":20,"statement":86,"time":null,"branch":14,"condition":2}]},"434":{"required_attribute":[{"pod":null,"subroutine":28,"statement":108,"time":null,"branch":19,"condition":4}]},"77":{"determine_packages":[{"pod":null,"subroutine":9,"statement":32,"time":null,"branch":5,"condition":1}]},"461":{"set_name_and_version":[{"pod":null,"subroutine":30,"statement":112,"time":null,"branch":20,"condition":4}]},"378":{"physical_directory":[{"pod":null,"subroutine":26,"statement":95,"time":null,"branch":16,"condition":4}]},"197":{"full_path":[{"pod":null,"subroutine":16,"statement":58,"time":null,"branch":8,"condition":1}]},"50":{"default_file_spec":[{"pod":null,"subroutine":7,"statement":28,"time":null,"branch":5,"condition":1}]},"304":{"__ANON__":[{"pod":null,"subroutine":21,"statement":86,"time":null,"branch":14,"condition":2}]},"253":{"__ANON__":[{"pod":null,"subroutine":18,"statement":70,"time":null,"branch":11,"condition":1}]},"160":{"find_files":[{"pod":null,"subroutine":14,"statement":54,"time":null,"branch":7,"condition":1}]},"9":{"BEGIN":[{"pod":null,"subroutine":4,"statement":12,"time":null,"branch":null,"condition":null}]},"8":{"BEGIN":[{"pod":null,"subroutine":3,"statement":9,"time":null,"branch":null,"condition":null}]},"86":{"__ANON__":[{"pod":null,"subroutine":11,"statement":39,"time":null,"branch":5,"condition":1}]},"-1":{"__COVER__":[{"pod":null,"subroutine":31,"statement":117,"time":null,"branch":21,"condition":5}]},"247":{"BEGIN":[{"pod":null,"subroutine":5,"statement":15,"time":null,"branch":null,"condition":null}]}},"condition":[[28,{"left":"$req","right":"not $$self{$req}","type":"and_3","op":"and"}],[307,{"left":"$provides","right":"{}","type":"or_2","op":"||"}],[347,{"left":"$_[0]{'path_class_dir'}","right":"'Path::Class::Dir'","type":"or_2","op":"||="}],[348,{"left":"$_[0]{'path_class_file'}","right":"'Path::Class::File'","type":"or_2","op":"||="}],[465,{"left":"not exists $$self{$fields[$i]}","right":"defined $values[$i]","type":"and_3","op":"and"}]]}